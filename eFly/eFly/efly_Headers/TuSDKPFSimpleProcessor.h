//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, TuSDKPFBrush, UIImage;

@interface TuSDKPFSimpleProcessor : NSObject
{
    struct CGContext *_smudgeContext;
    struct CGContext *_brushContext;
    UIImage *_originalImage;
    int _imageDataSize;
    char *_originalData;
    int _imageWidth;
    int _imageHeight;
    TuSDKPFBrush *_currentBrush;
    UIImage *_brushImage;
    double _brushSize;
    double _brushScale;
    NSMutableArray *_undoHistory;
    NSMutableArray *_redoHistory;
    struct CGPoint _prevPrevTouchPoint;
    _Bool _prevPrevTouchPointExists;
    unsigned long long _maxUndoCount;
    struct CGSize _originIVSize;
}

@property(nonatomic) struct CGSize originIVSize; // @synthesize originIVSize=_originIVSize;
@property(nonatomic) unsigned long long maxUndoCount; // @synthesize maxUndoCount=_maxUndoCount;
@property(nonatomic) double brushSize; // @synthesize brushSize=_brushSize;
@property(retain, nonatomic) TuSDKPFBrush *currentBrush; // @synthesize currentBrush=_currentBrush;
- (void).cxx_destruct;
- (void)destroySnapArray:(id)arg1;
- (void)destroyHistory;
- (void)destroy;
- (id)getPreviewImage:(_Bool)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 withOrientation:(float)arg2 withScale:(float)arg3 withAlphaFactor:(float)arg4;
- (double)getMaxTemplateDistance:(double)arg1;
- (id)drawAtCurrentPoint:(struct CGPoint)arg1 from:(struct CGPoint)arg2;
- (void)touchesBegan;
- (id)getSmudgeImage;
- (struct CGContext *)createBitmapContextWithWidth:(int)arg1 andHeight:(int)arg2;
- (struct CGContext *)createBitmapContextWithSizeOfImage:(id)arg1 drawImage:(_Bool)arg2;
- (unsigned long long)getUndoCount;
- (unsigned long long)getRedoCount;
- (void)updateSmudgeContextWithImage:(id)arg1;
- (void)clearSmudgeContext;
- (id)getUndoData;
- (id)getRedoData;
- (void)organizeHistory;
- (void)runCacheJob;
- (void)saveCurrentAsHistory;
- (char *)getRGBADataFromImage:(id)arg1;
- (void)setImage:(id)arg1;

@end

